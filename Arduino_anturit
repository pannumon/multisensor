#include <SparkFun_SCD4x_Arduino_Library.h>
#include <dht.h>
#include <ArduinoJson.h>
#include <ArduinoJson.hpp>
#include <Wire.h>
// #include <SPI.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

#define BME_SCK 13
#define BME_MISO 12
#define BME_MOSI 11
#define BME_CS 10

#define P_default (1013.25)
#define P_FMI (1002.00)

//DHT11 tai DHT21
#define outPin 8
dht DHT;

//SDC41
SCD4x mySensor;

//BME280
Adafruit_BME280 bme;  // I2C
//Adafruit_BME280 bme(BME_CS); // hardware SPI
//Adafruit_BME280 bme(BME_CS, BME_MOSI, BME_MISO, BME_SCK); // software SPI

//ADXL345
// int ADXL345 = 0x53; // The ADXL345 sensor I2C address
// float X_out, Y_out, Z_out;  // Outputs


//LM35
const int lm35_pin = A1;

unsigned long delayTime;

void setup() {
  Serial.begin(9600);


  unsigned status;

// tarvitaanko, ADXL345 koodista tämä
//Wire.begin();

  // default settings
  status = bme.begin(0x76);
  // You can also pass in a Wire library object like &Wire2
  // status = bme.begin(0x76, &Wire2)
   
  //SDC41
  mySensor.begin();


/*
 // Set ADXL345 in measuring mode
  Wire.beginTransmission(ADXL345); // Start communicating with the device 
  Wire.write(0x2D); // Access/ talk to POWER_CTL Register - 0x2D
  // Enable measurement
  Wire.write(8); // (8dec -> 0000 1000 binary) Bit D3 High for measuring enable 
  Wire.endTransmission();
*/

  Serial.println("Initialized");
  delayTime = 5000;

  Serial.println();
}

void loop() {
  delay(delayTime);

  //DHT11
  //float readData = DHT.read11(outPin);

  //DHT21
  float readData = DHT.read2302(outPin);

//LM35
int lm35adc_value;
float LM35_T;
lm35adc_value = analogRead(lm35_pin);	/* Read Temperature */
LM35_T = (float(lm35adc_value) * 4.8828125);	/* Convert adc value to equivalent voltage */
  /* 3.3V/4095= 0.80 */
  /* 5V/1024 =4.8828125 */
LM35_T = (LM35_T / 10);	/* LM35 gives output of 10mv/°C */

  StaticJsonDocument<200> doc;
  //doc["_id"] = "multidataa";
  doc["bme_T"] = bme.readTemperature();
  doc["bme_P"] = bme.readPressure();
  doc["bme_RH"] = bme.readHumidity();
  doc["bme_h_default"] = bme.readAltitude(P_default);
  doc["bme_h_fmi"] = bme.readAltitude(P_FMI);

  doc["dht_t"] = DHT.temperature; 
  doc["dht_rh"] = DHT.humidity;

  doc["SCD41_CO2"] = mySensor.getCO2();
  doc["SCD41_RH"] = mySensor.getHumidity();
  doc["SCD41_T"] = mySensor.getTemperature();
  
  doc["LM35_T"] = LM35_T;

  serializeJson(doc, Serial);
  Serial.println();
}
